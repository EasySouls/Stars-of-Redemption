{"ast":null,"code":"var _jsxFileName = \"E:\\\\Webpage\\\\text-rpg\\\\src\\\\CharacterCreationScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { CharacterContext } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CharacterCreationScreen() {\n  _s();\n  const [answer, setAnswer] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"typing\"); // 'typing', 'submitting' or 'success'\n\n  const {\n    character,\n    setCharacter\n  } = useContext(CharacterContext);\n  if (status === \"success\") {\n    setCharacter({\n      ...character,\n      name: answer\n    });\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Character created\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setStatus(\"submitting\");\n    try {\n      await submitForm(answer);\n      setStatus(\"success\");\n    } catch (err) {\n      setStatus(\"typing\");\n      setError(err);\n    }\n  }\n  function handleTextAreaChange(e) {\n    setAnswer(e.target.value);\n  }\n  function submitForm(answer) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        let shouldError = answer.toLowerCase() === \"\"; //! List wrong answers\n        if (shouldError) {\n          reject(new Error(\"You can't make a character with this name. Try again!\"));\n        } else {\n          resolve();\n        }\n      }, 1000);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose the name of your character:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: answer,\n        onChange: handleTextAreaChange,\n        disabled: status === \"submitting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: answer.length === 0 || status === \"submitting\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), error !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"create-character-error\",\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(CharacterCreationScreen, \"GttTX5rC5Hoq5bC0/NIcyd+G4HM=\");\n_c = CharacterCreationScreen;\nvar _c;\n$RefreshReg$(_c, \"CharacterCreationScreen\");","map":{"version":3,"names":["React","useState","useContext","CharacterContext","CharacterCreationScreen","answer","setAnswer","error","setError","status","setStatus","character","setCharacter","name","handleSubmit","e","preventDefault","submitForm","err","handleTextAreaChange","target","value","Promise","resolve","reject","setTimeout","shouldError","toLowerCase","Error","length","message"],"sources":["E:/Webpage/text-rpg/src/CharacterCreationScreen.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { CharacterContext } from \"./App\";\r\n\r\nexport default function CharacterCreationScreen() {\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(\"typing\"); // 'typing', 'submitting' or 'success'\r\n\r\n  const { character, setCharacter } = useContext(CharacterContext);\r\n\r\n  if (status === \"success\") {\r\n    setCharacter({ ...character, name: answer });\r\n    return <h2>Character created</h2>;\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setStatus(\"submitting\");\r\n    try {\r\n      await submitForm(answer);\r\n      setStatus(\"success\");\r\n    } catch (err) {\r\n      setStatus(\"typing\");\r\n      setError(err);\r\n    }\r\n  }\r\n\r\n  function handleTextAreaChange(e) {\r\n    setAnswer(e.target.value);\r\n  }\r\n\r\n  function submitForm(answer) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        let shouldError = answer.toLowerCase() === \"\"; //! List wrong answers\r\n        if (shouldError) {\r\n          reject(\r\n            new Error(\"You can't make a character with this name. Try again!\")\r\n          );\r\n        } else {\r\n          resolve();\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose the name of your character:</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={answer}\r\n          onChange={handleTextAreaChange}\r\n          disabled={status === \"submitting\"}\r\n        />\r\n        <br />\r\n        <button disabled={answer.length === 0 || status === \"submitting\"}>\r\n          Create\r\n        </button>\r\n        {error !== null && (\r\n          <p className='create-character-error'>{error.message}</p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,gBAAgB,QAAQ,OAAO;AAAC;AAEzC,eAAe,SAASC,uBAAuB,GAAG;EAAA;EAChD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAEhD,MAAM;IAAEU,SAAS;IAAEC;EAAa,CAAC,GAAGV,UAAU,CAACC,gBAAgB,CAAC;EAEhE,IAAIM,MAAM,KAAK,SAAS,EAAE;IACxBG,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAEE,IAAI,EAAER;IAAO,CAAC,CAAC;IAC5C,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B;EACnC;EAEA,eAAeS,YAAY,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClBN,SAAS,CAAC,YAAY,CAAC;IACvB,IAAI;MACF,MAAMO,UAAU,CAACZ,MAAM,CAAC;MACxBK,SAAS,CAAC,SAAS,CAAC;IACtB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZR,SAAS,CAAC,QAAQ,CAAC;MACnBF,QAAQ,CAACU,GAAG,CAAC;IACf;EACF;EAEA,SAASC,oBAAoB,CAACJ,CAAC,EAAE;IAC/BT,SAAS,CAACS,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;EAC3B;EAEA,SAASJ,UAAU,CAACZ,MAAM,EAAE;IAC1B,OAAO,IAAIiB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,UAAU,CAAC,MAAM;QACf,IAAIC,WAAW,GAAGrB,MAAM,CAACsB,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,IAAID,WAAW,EAAE;UACfF,MAAM,CACJ,IAAII,KAAK,CAAC,uDAAuD,CAAC,CACnE;QACH,CAAC,MAAM;UACLL,OAAO,EAAE;QACX;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2C,eAC3C;MAAM,QAAQ,EAAET,YAAa;MAAA,wBAC3B;QACE,KAAK,EAAET,MAAO;QACd,QAAQ,EAAEc,oBAAqB;QAC/B,QAAQ,EAAEV,MAAM,KAAK;MAAa;QAAA;QAAA;QAAA;MAAA,QAClC,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,QAAQ,EAAEJ,MAAM,CAACwB,MAAM,KAAK,CAAC,IAAIpB,MAAM,KAAK,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAExD,EACRF,KAAK,KAAK,IAAI,iBACb;QAAG,SAAS,EAAC,wBAAwB;QAAA,UAAEA,KAAK,CAACuB;MAAO;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA9DuB1B,uBAAuB;AAAA,KAAvBA,uBAAuB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}